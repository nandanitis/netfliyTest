{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Web_Dev\\\\MERN_STACK\\\\imdbMovie\\\\frontend\\\\src\\\\components\\\\reviewsForm.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./reviewsForm.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useMoviesContext } from \"../hooks/useMoviesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewsForm = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [reviewGiven, setreviewGiven] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async e => {\n    _s();\n\n    const {\n      id\n    } = useParams();\n    e.preventDefault();\n    const review = {\n      name,\n      rating,\n      reviewGiven\n    };\n    const response = await fetch(`/api/movies/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify(review),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      setError(null);\n      setName('');\n      setreviewGiven('');\n      setRating('');\n      console.log(\" New Review added: \", json);\n      props.onClose();\n    }\n  };\n\n  _s(handleSubmit, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value),\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Your Rating :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setRating(e.target.value),\n      value: rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Review :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setreviewGiven(e.target.value),\n      value: reviewGiven\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonToAdd\",\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ReviewsForm, \"UwHV31Wb4TeITDZ3q/I47IYDdkY=\");\n\n_c = ReviewsForm;\nexport default ReviewsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewsForm\");","map":{"version":3,"names":["useState","useParams","useMoviesContext","ReviewsForm","props","name","setName","rating","setRating","reviewGiven","setreviewGiven","error","setError","handleSubmit","e","id","preventDefault","review","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","onClose","target","value"],"sources":["C:/Coding/Web_Dev/MERN_STACK/imdbMovie/frontend/src/components/reviewsForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./reviewsForm.css\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMoviesContext } from \"../hooks/useMoviesContext\";\r\n\r\nconst ReviewsForm = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [reviewGiven, setreviewGiven] = useState(\"\");\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    const { id } = useParams();\r\n    e.preventDefault();\r\n    const review = { name, rating, reviewGiven };\r\n\r\n    const response = await fetch(`/api/movies/${id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(review),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      setError(null);\r\n      setName('');\r\n      setreviewGiven('');\r\n      setRating('');\r\n      console.log(\" New Review added: \", json);\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <label>Name :</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n      />\r\n\r\n      <label>Your Rating :</label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => setRating(e.target.value)}\r\n        value={rating}\r\n      />\r\n\r\n      <label>Review :</label>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => setreviewGiven(e.target.value)}\r\n        value={reviewGiven}\r\n      />\r\n\r\n      <button className=\"buttonToAdd\">Add Review</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReviewsForm;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,mBAAP;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;IAAA;;IAChC,MAAM;MAAEC;IAAF,IAASd,SAAS,EAAxB;IACAa,CAAC,CAACE,cAAF;IACA,MAAMC,MAAM,GAAG;MAAEZ,IAAF;MAAQE,MAAR;MAAgBE;IAAhB,CAAf;IAEA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcJ,EAAG,EAAnB,EAAsB;MAChDK,MAAM,EAAE,MADwC;MAEhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAF0C;MAGhDO,OAAO,EAAE;QACP,gBAAgB;MADT;IAHuC,CAAtB,CAA5B;IAOA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;MAChBd,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR;IACD;;IACD,IAAIO,QAAQ,CAACQ,EAAb,EAAiB;MACfd,QAAQ,CAAC,IAAD,CAAR;MACAN,OAAO,CAAC,EAAD,CAAP;MACAI,cAAc,CAAC,EAAD,CAAd;MACAF,SAAS,CAAC,EAAD,CAAT;MACAmB,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,IAAnC;MACArB,KAAK,CAACyB,OAAN;IACD;EACF,CAzBD;;EAP6B,GAOvBhB,YAPuB;IAAA,QAQZZ,SARY;EAAA;;EAkC7B,oBACE;IAAM,SAAS,EAAC,QAAhB;IAAyB,QAAQ,EAAEY,YAAnC;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF1B;MAGE,KAAK,EAAE1B;IAHT;MAAA;MAAA;MAAA;IAAA,QAFF,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MACE,IAAI,EAAC,QADP;MAEE,QAAQ,EAAGS,CAAD,IAAON,SAAS,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF5B;MAGE,KAAK,EAAExB;IAHT;MAAA;MAAA;MAAA;IAAA,QATF,eAeE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF,eAgBE;MACE,IAAI,EAAC,QADP;MAEE,QAAQ,EAAGO,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAFjC;MAGE,KAAK,EAAEtB;IAHT;MAAA;MAAA;MAAA;IAAA,QAhBF,eAsBE;MAAQ,SAAS,EAAC,aAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF,EAuBGE,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAf;MAAA,UAAwBA;IAAxB;MAAA;MAAA;MAAA;IAAA,QAvBZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CA7DD;;IAAMR,W;;KAAAA,W;AA+DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}