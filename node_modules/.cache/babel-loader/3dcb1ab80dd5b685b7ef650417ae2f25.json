{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Web_Dev\\\\MERN_STACK\\\\imdbMovie\\\\frontend\\\\src\\\\components\\\\reviewsForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./reviewsForm.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useMoviesContext } from \"../hooks/useMoviesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewsForm = props => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [reviewGiven, setreviewGiven] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const response = await fetch(`/api/movies/${id}`);\n      const json = await response.json();\n\n      if (response.ok) {\n        setMovie(json[\"movie\"]);\n        let reviewFilter = json[\"review\"].filter(review => review.title === json[\"movie\"][\"title\"]);\n      }\n    };\n\n    fetchMovie();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let title = movie.title;\n    const review = {\n      name,\n      title,\n      rating,\n      reviewGiven\n    };\n    const response = await fetch(`/api/movies/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify(review),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      setError(null);\n      setName('');\n      setreviewGiven('');\n      setRating('');\n      console.log(\" New Review added: \", json);\n      props.onClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value),\n      value: name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Your Rating :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"10\",\n      onChange: e => setRating(e.target.value),\n      value: rating,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Review :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setreviewGiven(e.target.value),\n      value: reviewGiven,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonToAdd\",\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorr\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReviewsForm, \"K3CPV4qMD9ixEGRHeGISIDU8lho=\", false, function () {\n  return [useParams];\n});\n\n_c = ReviewsForm;\nexport default ReviewsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewsForm\");","map":{"version":3,"names":["useState","useParams","useMoviesContext","ReviewsForm","props","movie","setMovie","name","setName","rating","setRating","reviewGiven","setreviewGiven","id","error","setError","useEffect","fetchMovie","response","fetch","json","ok","reviewFilter","filter","review","title","handleSubmit","e","preventDefault","method","body","JSON","stringify","headers","console","log","onClose","target","value"],"sources":["C:/Coding/Web_Dev/MERN_STACK/imdbMovie/frontend/src/components/reviewsForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./reviewsForm.css\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMoviesContext } from \"../hooks/useMoviesContext\";\r\n\r\nconst ReviewsForm = (props) => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [reviewGiven, setreviewGiven] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n          const response = await fetch(`/api/movies/${id}`);\r\n          const json = await response.json();\r\n    \r\n          if (response.ok) {\r\n            setMovie(json[\"movie\"]);\r\n            let reviewFilter = json[\"review\"].filter(\r\n              (review) => review.title === json[\"movie\"][\"title\"]\r\n            );\r\n          }\r\n        };\r\n    \r\n        fetchMovie();\r\n      }, []);\r\n\r\n\r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let title=movie.title;\r\n        const review = { name,title, rating, reviewGiven };\r\n    \r\n        const response = await fetch(`/api/movies/${id}`, {\r\n          method: \"POST\",\r\n          body: JSON.stringify(review),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const json = await response.json();\r\n    \r\n        if (!response.ok) {\r\n          setError(json.error);\r\n        }\r\n        if (response.ok) {\r\n          setError(null);\r\n          setName('');\r\n          setreviewGiven('');\r\n          setRating('');\r\n          console.log(\" New Review added: \", json);\r\n          props.onClose();\r\n        }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <label>Name :</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n        required\r\n      />\r\n\r\n      <label>Your Rating :</label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"10\"\r\n        onChange={(e) => setRating(e.target.value)}\r\n        value={rating}\r\n        required\r\n      />\r\n\r\n      <label>Review :</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setreviewGiven(e.target.value)}\r\n        value={reviewGiven}\r\n        required\r\n      />\r\n\r\n      <button className=\"buttonToAdd\">Add Review</button>\r\n      {error && <div className=\"errorr\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReviewsForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}