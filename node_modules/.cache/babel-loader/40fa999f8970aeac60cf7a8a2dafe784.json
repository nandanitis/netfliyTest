{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Web_Dev\\\\MERN_STACK\\\\imdbMovie\\\\frontend\\\\src\\\\pages\\\\singleMovie.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./singleMovie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleMovie = () => {\n  _s();\n\n  const [movie, setMovie] = useState(null);\n  const [review, setReview] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const response = await fetch(`/api/movies/${id}`);\n      const json = await response.json();\n\n      if (response.ok) {\n        setMovie(json[\"movie\"]);\n        setReview(json[\"review\"]);\n      }\n    };\n\n    fetchMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movieImage\",\n        src: movie.posterUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Movie Name : \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"titleSpan\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Release: \", movie.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Runtime:\", movie.runtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"\",\n        children: \"PLOT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleMovie, \"CZFhURCED9V9TqtYKLPk49MDMaE=\", false, function () {\n  return [useParams];\n});\n\n_c = SingleMovie;\nexport default SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"names":["React","useEffect","useState","useParams","SingleMovie","movie","setMovie","review","setReview","id","fetchMovie","response","fetch","json","ok","posterUrl","title","year","runtime"],"sources":["C:/Coding/Web_Dev/MERN_STACK/imdbMovie/frontend/src/pages/singleMovie.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./singleMovie.css\";\r\n\r\nconst SingleMovie = () => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [review, setReview] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      const response = await fetch(`/api/movies/${id}`);\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMovie(json[\"movie\"]);\r\n        setReview(json[\"review\"]);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {movie && (\r\n        <div className=\"box\">\r\n          <img className=\"movieImage\" src={movie.posterUrl} alt=\"\" />\r\n          <h1>\r\n            Movie Name : <span className=\"titleSpan\">{movie.title}</span>\r\n          </h1>\r\n          <div className=\"details\">\r\n            <span>Release: {movie.year}</span>\r\n            <span>Runtime:{movie.runtime}</span>\r\n          </div>\r\n          <h2 className=\"\">PLOT</h2>\r\n          <div className=\"plot\"></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM;IAAEO;EAAF,IAASN,SAAS,EAAxB;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcH,EAAG,EAAnB,CAA5B;MACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;MAEA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACfR,QAAQ,CAACO,IAAI,CAAC,OAAD,CAAL,CAAR;QACAL,SAAS,CAACK,IAAI,CAAC,QAAD,CAAL,CAAT;MACD;IACF,CARD;;IAUAH,UAAU;EACX,CAZQ,EAYN,EAZM,CAAT;EAcA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGL,KAAK,iBACJ;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAEA,KAAK,CAACU,SAAvC;QAAkD,GAAG,EAAC;MAAtD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,yCACe;UAAM,SAAS,EAAC,WAAhB;UAAA,UAA6BV,KAAK,CAACW;QAAnC;UAAA;UAAA;UAAA;QAAA,QADf;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE;UAAA,wBAAgBX,KAAK,CAACY,IAAtB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,uBAAeZ,KAAK,CAACa,OAArB;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAI,SAAS,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAUE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CArCD;;GAAMd,W;UAGWD,S;;;KAHXC,W;AAuCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}