{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Web_Dev\\\\MERN_STACK\\\\imdbMovie\\\\frontend\\\\src\\\\components\\\\movieform.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./movieForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieForm = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [runtime, setrunTime] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [plot, setPlot] = useState(\"\");\n  const [posterUrl, setposterUrl] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let obj = JSON.parse(title);\n    console;\n    setTitle(obj.title);\n    setYear(obj.year);\n    setrunTime(json.runtime);\n    const movie = {\n      title,\n      year,\n      runtime,\n      genres,\n      director,\n      plot,\n      posterUrl\n    };\n    const response = await fetch(\"/api/movies\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      setError(null);\n      setTitle(\"\");\n      setYear(\"\");\n      setDirector(\"\");\n      setGenres(\"\");\n      setrunTime(\"\");\n      setPlot(\"\");\n      setposterUrl(\"\");\n      console.log(\" New Movie added: \", json);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Movie Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"textarea\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieForm, \"pOLF2eZPsnHjYDr4eDJRp6DmppM=\");\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["useState","MovieForm","title","setTitle","year","setYear","runtime","setrunTime","genres","setGenres","director","setDirector","plot","setPlot","posterUrl","setposterUrl","error","setError","handleSubmit","e","preventDefault","obj","JSON","parse","console","json","movie","response","fetch","method","body","stringify","headers","ok","log","target","value"],"sources":["C:/Coding/Web_Dev/MERN_STACK/imdbMovie/frontend/src/components/movieform.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./movieForm.css\";\r\n\r\nconst MovieForm = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [runtime, setrunTime] = useState(\"\");\r\n  const [genres, setGenres] = useState(\"\");\r\n  const [director, setDirector] = useState(\"\");\r\n  const [plot, setPlot] = useState(\"\");\r\n  const [posterUrl, setposterUrl] = useState(\"\");\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let obj = JSON.parse(title);\r\n    console\r\n    setTitle(obj.title);\r\n    setYear(obj.year);\r\n    setrunTime(json.runtime);\r\n    \r\n\r\n    const movie = { title, year, runtime, genres, director, plot, posterUrl };\r\n\r\n    const response = await fetch(\"/api/movies\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(movie),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      setError(null);\r\n      setTitle(\"\");\r\n      setYear(\"\");\r\n      setDirector(\"\");\r\n      setGenres(\"\");\r\n      setrunTime(\"\");\r\n      setPlot(\"\");\r\n      setposterUrl(\"\");\r\n\r\n      console.log(\" New Movie added: \", json);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <label>Movie Title:</label>\r\n      <input\r\n        type=\"textarea\"\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        value={title}\r\n      />\r\n\r\n      <button className=\"button\">Add Movie</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}