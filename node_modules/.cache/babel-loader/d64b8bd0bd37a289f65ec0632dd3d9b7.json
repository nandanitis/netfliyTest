{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Web_Dev\\\\MERN_STACK\\\\imdbMovie\\\\frontend\\\\src\\\\components\\\\movieform.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./movieForm.css\";\nimport { useMoviesContext } from '../hooks/useMoviesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieForm = props => {\n  _s();\n  const {\n    dispatch\n  } = useMoviesContext();\n  const [jsonn, setJsonn] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let obj = JSON.parse(jsonn);\n    if (password === \"1237\") {\n      const response = await fetch(`/api/movies`, {\n        method: \"POST\",\n        body: JSON.stringify(obj),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        setError(json.error);\n      }\n      if (response.ok) {\n        setError(null);\n        console.log(\" New Movie added: \", json);\n        dispatch({\n          type: 'CREATE_MOVIE',\n          payload: json\n        });\n        props.onClose();\n      }\n    } else {\n      let wrong = document.getElementById('passwordWrong');\n      wrong.innerHTML = \"Password is Wrong\";\n      wrong.style.color = \"red\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Movie Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"enterJson\",\n      onChange: e => setJsonn(e.target.value),\n      value: jsonn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"passwordWrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonToAdd\",\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieForm, \"0vWQokaOsswdjZR1N1ztjIEofkQ=\", false, function () {\n  return [useMoviesContext];\n});\n_c = MovieForm;\nexport default MovieForm;\nvar _c;\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["useState","useMoviesContext","MovieForm","props","dispatch","jsonn","setJsonn","password","setPassword","error","setError","handleSubmit","e","preventDefault","obj","JSON","parse","response","fetch","method","body","stringify","headers","json","ok","console","log","type","payload","onClose","wrong","document","getElementById","innerHTML","style","color","target","value"],"sources":["C:/Coding/Web_Dev/MERN_STACK/imdbMovie/frontend/src/components/movieform.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./movieForm.css\";\r\n\r\nimport {useMoviesContext} from  '../hooks/useMoviesContext'\r\n\r\nconst MovieForm = (props) => {\r\n  const{dispatch} = useMoviesContext()\r\n  const [jsonn,setJsonn] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    \r\n    e.preventDefault();\r\n    let obj = JSON.parse(jsonn);\r\n    if(password===\"1237\"){\r\n      const response = await fetch(`/api/movies`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n  \r\n      if (!response.ok) {\r\n        setError(json.error);\r\n      }\r\n      if (response.ok) {\r\n        setError(null);\r\n        console.log(\" New Movie added: \", json);\r\n        dispatch({type: 'CREATE_MOVIE', payload: json})\r\n        props.onClose();\r\n      }\r\n    }else{\r\n       let  wrong = document.getElementById('passwordWrong');\r\n       wrong.innerHTML=\"Password is Wrong\"\r\n       wrong.style.color = \"red\";\r\n\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <label>Movie Title:</label>\r\n      <textarea\r\n        className=\"enterJson\"        \r\n        onChange={(e) => setJsonn(e.target.value)}\r\n        value={jsonn}\r\n      />\r\n\r\n      <label>Password :</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        value={password}\r\n        \r\n      />\r\n      <div id=\"passwordWrong\"></div>\r\n\r\n      <button className=\"buttonToAdd\" >Add Movie</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AAExB,SAAQC,gBAAgB,QAAQ,2BAA2B;AAAA;AAE3D,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAK;IAACC;EAAQ,CAAC,GAAGH,gBAAgB,EAAE;EACpC,MAAM,CAACI,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAIxC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAEhCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACX,KAAK,CAAC;IAC3B,IAAGE,QAAQ,KAAG,MAAM,EAAC;MACnB,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAY,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL,IAAI,CAACM,SAAS,CAACP,GAAG,CAAC;QACzBQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;MAElC,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChBd,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;MACtB;MACA,IAAIQ,QAAQ,CAACO,EAAE,EAAE;QACfd,QAAQ,CAAC,IAAI,CAAC;QACde,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;QACvCnB,QAAQ,CAAC;UAACuB,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAEL;QAAI,CAAC,CAAC;QAC/CpB,KAAK,CAAC0B,OAAO,EAAE;MACjB;IACF,CAAC,MAAI;MACF,IAAKC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;MACrDF,KAAK,CAACG,SAAS,GAAC,mBAAmB;MACnCH,KAAK,CAACI,KAAK,CAACC,KAAK,GAAG,KAAK;IAE5B;EAGF,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,QAAQ;IAAC,QAAQ,EAAExB,YAAa;IAAA,wBAC9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3B;MACE,SAAS,EAAC,WAAW;MACrB,QAAQ,EAAGC,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAE;MAC1C,KAAK,EAAEhC;IAAM;MAAA;MAAA;MAAA;IAAA,QACb,eAEF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,eACzB;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGO,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAE;MAC7C,KAAK,EAAE9B;IAAS;MAAA;MAAA;MAAA;IAAA,QAEhB,eACF;MAAK,EAAE,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAO,eAE9B;MAAQ,SAAS,EAAC,aAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,EAClDE,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACzC;AAEX,CAAC;AAAC,GA/DIP,SAAS;EAAA,QACKD,gBAAgB;AAAA;AAAA,KAD9BC,SAAS;AAiEf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}