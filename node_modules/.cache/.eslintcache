[{"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\index.js":"1","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\App.js":"2","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\navbar.js":"3","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Home.js":"4","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\movies.js":"5","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Movies.js":"6","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\singleMovie.js":"7","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\movieform.js":"8","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\Modal\\Modal.js":"9","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\context\\MovieContext.js":"10","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\hooks\\useMoviesContext.js":"11","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\ShowMovies.js":"12","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\reviewsForm.js":"13","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Tvshows.js":"14","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\singleTvshow.js":"15","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\tvreviewsForm.js":"16","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\contactus.js":"17"},{"size":374,"mtime":1661617356899,"results":"18","hashOfConfig":"19"},{"size":1222,"mtime":1662217678208,"results":"20","hashOfConfig":"19"},{"size":642,"mtime":1662263914117,"results":"21","hashOfConfig":"19"},{"size":1605,"mtime":1662265188988,"results":"22","hashOfConfig":"19"},{"size":4659,"mtime":1661480102801,"results":"23","hashOfConfig":"19"},{"size":2272,"mtime":1662264058795,"results":"24","hashOfConfig":"19"},{"size":2542,"mtime":1662209680658,"results":"25","hashOfConfig":"19"},{"size":1785,"mtime":1661618006368,"results":"26","hashOfConfig":"19"},{"size":1281,"mtime":1661614361339,"results":"27","hashOfConfig":"19"},{"size":741,"mtime":1661678214365,"results":"28","hashOfConfig":"19"},{"size":310,"mtime":1661617529719,"results":"29","hashOfConfig":"19"},{"size":0,"mtime":1661658298384,"results":"30","hashOfConfig":"19"},{"size":2296,"mtime":1662214091981,"results":"31","hashOfConfig":"19"},{"size":1976,"mtime":1662264099553,"results":"32","hashOfConfig":"19"},{"size":2815,"mtime":1662215687668,"results":"33","hashOfConfig":"19"},{"size":2482,"mtime":1662216178907,"results":"34","hashOfConfig":"19"},{"size":3625,"mtime":1662264130874,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1durm25",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\index.js",[],[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\App.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\navbar.js",["96","97","98","99"],[],"import React from 'react'\r\nimport './navbar.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div id=\"container\">\r\n    \r\n    <div id=\"navBtn\">\r\n      <i className=\"fas fa-bars openNav\" />\r\n    </div>\r\n    <div className=\"navbar\">\r\n      <i className=\"fas fa-times close\" />\r\n      <ul>\r\n        <li ><a><Link to='/'>Home</Link></a></li>\r\n        <li><a ><Link to='/api/movies'>Movies</Link></a></li>\r\n        <li><a><Link to='/api/tvshows'>TV Shows</Link></a></li>\r\n        <li><a><Link to='/contactus'>Contact Us</Link></a></li>\r\n      </ul>\r\n    </div>\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Home.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\movies.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Movies.js",["100","101","102"],[],"import React from \"react\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMoviesContext } from \"../hooks/useMoviesContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MovieForm from \"../components/movieform\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./movies.css\";\r\n\r\n\r\n\r\nconst Movies = () => {\r\n\r\n  const {movies, dispatch} = useMoviesContext()\r\n   const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\"/api/movies\");\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        dispatch({type:\"SET_MOVIES\", payload:json})\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleDelete = async(_id) =>{\r\n    const response = await fetch('/api/movies/'+_id,{\r\n      method:'DELETE'\r\n    })\r\n    const json = await response.json()\r\n    if(response.ok){\r\n      dispatch({type:\"DELETE_MOVIE\", payload:json})\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"container\">\r\n    <div className=\"margin-Top\">\r\n      <div id=\"section\">\r\n        <div id=\"content\">\r\n          <button className=\"addMovie\" onClick={() => setShow(true)}>\r\n            Add Movie\r\n          </button>\r\n          <Modal title=\"Add A New Movie\" onClose={() => setShow(false)} show={show}>\r\n            <MovieForm onClose={() => setShow(false)} />\r\n          </Modal>\r\n\r\n          <div className=\"post\">\r\n            {/* post cards */}\r\n            {movies &&\r\n              movies.map((movie) => (\r\n                <div className=\"postCards\" key={movie._id}>\r\n                  <a href=\"article.html\">\r\n                    <Link to={`/api/movies/${movie._id}`} movie={movie}>\r\n                      <img src={movie.posterUrl} />\r\n                      <h1 className=\"postTitle\">{movie.title}</h1>\r\n                      <div className=\"movie-infoo\">\r\n                        <span> {movie.year} </span>||\r\n                        <span> {movie.runtime + \"min.\"} </span>\r\n                        <div>{movie.genres.join(\", \")}</div>\r\n                      </div>\r\n                    </Link>\r\n                  </a>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\singleMovie.js",["103"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./singleMovie.css\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ReviewsForm from \"../components/reviewsForm\";\r\n\r\nconst SingleMovie = () => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [review, setReview] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      const response = await fetch(`/api/movies/${id}`);\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMovie(json[\"movie\"]);\r\n        let reviewFilter = json[\"review\"].filter(\r\n          (review) => review.title === json[\"movie\"][\"title\"]\r\n        );\r\n        setReview(reviewFilter);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, []);\r\n  console.log(review);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {movie && (\r\n        <div className=\"box\">\r\n          <img className=\"movieImage\" src={movie.posterUrl} alt=\"\" />\r\n          <h1>\r\n            Movie Name : <span className=\"titleSpan\">{movie.title}</span>\r\n          </h1>\r\n          <div className=\"details\">\r\n            <span>Release: {movie.year}</span>\r\n            <span>Runtime:{movie.runtime}</span>\r\n          </div>\r\n          <h3 className=\"plot\">\r\n            PLOT : <span>{movie.plot}</span>{\" \"}\r\n          </h3>\r\n\r\n          <div className=\"reviewStarts\">\r\n            \r\n          <h1 className=\"reviewTitle\">Reviews for the Movie : </h1>\r\n          <button className=\"addReview\" onClick={() => setShow(true)}>\r\n            Add Review\r\n          </button>\r\n          </div>\r\n\r\n          <Modal title=\"Add A New Review\" onClose={() => setShow(false)} show={show}>\r\n            {<ReviewsForm  onClose={() => setShow(false)} />}\r\n          </Modal>\r\n          <div className=\"ALL-Reviews\">\r\n\r\n          \r\n          {review &&\r\n            review.map((review) => (\r\n              <div className=\"review-details\">\r\n                \r\n                <h4 className=\"userReview\">User : {review.name}</h4>\r\n                <p>\r\n                  <strong>Review Given: </strong>\r\n                  {review.rating}\r\n                </p>\r\n                <p>\r\n                  <strong> {review.reviewGiven} </strong>\r\n                 \r\n                </p>\r\n                <p>{review.createdAt}</p>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\movieform.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\Modal\\Modal.js",["104"],[],"import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => {\r\n  const closeOnEscapeKeyDown = e => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <CSSTransition\r\n      in={props.show}\r\n      unmountOnExit\r\n      timeout={{ enter: 0, exit: 300 }}\r\n    >\r\n      <div className=\"modal\" onClick={props.onClose}>\r\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">{props.title}</h4>\r\n          </div>\r\n          <div className=\"modal-body\">{props.children}</div>\r\n          <div className=\"modal-footer\">\r\n            <button onClick={props.onClose} className=\"button\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\context\\MovieContext.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\hooks\\useMoviesContext.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\ShowMovies.js",[],[],"C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\reviewsForm.js",["105"],[],"import { useState, useEffect } from \"react\";\r\nimport \"./reviewsForm.css\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ReviewsForm = (props) => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [reviewGiven, setreviewGiven] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n          const response = await fetch(`/api/movies/${id}`);\r\n          const json = await response.json();\r\n          if (response.ok) {\r\n            setMovie(json[\"movie\"]);\r\n          }\r\n        };\r\n        fetchMovie();\r\n      }, []);\r\n\r\n\r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let title=movie.title;\r\n        const review = { name,title, rating, reviewGiven };\r\n    \r\n        const response = await fetch(`/api/movies/${id}`, {\r\n          method: \"POST\",\r\n          body: JSON.stringify(review),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const json = await response.json();\r\n    \r\n        if (!response.ok) {\r\n          setError(json.error);\r\n        }\r\n        if (response.ok) {\r\n          setError(null);\r\n          setName('');\r\n          setreviewGiven('');\r\n          setRating('');\r\n          console.log(\" New Review added: \", json);\r\n          props.onClose();\r\n        }\r\n  };\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}>\r\n      <label>Name :</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        value={name}\r\n        required\r\n      />\r\n\r\n      <label>Your Rating :</label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"10\"\r\n        onChange={(e) => setRating(e.target.value)}\r\n        value={rating}\r\n        required\r\n      />\r\n\r\n      <label>Review :</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setreviewGiven(e.target.value)}\r\n        value={reviewGiven}\r\n        required\r\n      />\r\n\r\n      <button className=\"buttonToAdd\">Add Review</button>\r\n      {error && <div className=\"errorr\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReviewsForm;\r\n","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\Tvshows.js",["106"],[],"import React from \"react\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MovieForm from \"../components/movieform\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./movies.css\";\r\n\r\n\r\n\r\nconst Tvshow = () => {\r\n\r\n  const [tvshows,settvshows] = useState('');\r\n   const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await fetch(\"/api/tvshows\");\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        settvshows(json);\r\n        console.log(json);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"container\">\r\n     <div className=\"margin-Top\">\r\n      <div id=\"section\">\r\n        <div id=\"content\">\r\n          <button className=\"addMovie\" onClick={() => setShow(true)}>\r\n            Add TV Show\r\n          </button>\r\n          <Modal title=\"Add A New Movie\" onClose={() => setShow(false)} show={show}>\r\n            <MovieForm onClose={() => setShow(false)} />\r\n          </Modal>\r\n\r\n          <div className=\"post\">\r\n            {/* post cards */}\r\n            {tvshows &&\r\n              tvshows.map((tvshow) => (\r\n                <div className=\"postCards\" key={tvshow._id}>\r\n                  <a href=\"article.html\">\r\n                    <Link to={`/api/tvshows/${tvshow._id}`} tvshow={tvshow}>\r\n                      <img src={tvshow.posterUrl} />\r\n                      <h1 className=\"postTitle\">{tvshow.title}</h1>\r\n                      <div className=\"movie-infoo\">\r\n                        <span> {tvshow.year} </span>||\r\n                        <span> {tvshow.runtime + \" Season\"} </span>\r\n                        <div>{tvshow.genres.join(\", \")}</div>\r\n                      </div>\r\n                    </Link>\r\n                  </a>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tvshow;\r\n","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\singleTvshow.js",["107","108"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./singleMovie.css\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ReviewsForm from \"../components/reviewsForm\";\r\nimport TvreviewsForm from \"../components/tvreviewsForm\";\r\n\r\nconst SingleTvshow = () => {\r\n    const [movie, setMovie] = useState(null);\r\n    const [review, setReview] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const { id } = useParams();\r\n  \r\n  \r\n    useEffect(() => {\r\n      const fetchMovie = async () => {\r\n        const response = await fetch(`/api/tvshows/${id}`);\r\n        const json = await response.json();\r\n  \r\n        if (response.ok) {\r\n          setMovie(json[\"tvshow\"]);\r\n          let reviewFilter = json[\"review\"].filter(\r\n              (review) => review.title === json[\"tvshow\"][\"title\"]\r\n              );\r\n              console.log(reviewFilter);\r\n              setReview(reviewFilter);\r\n            }\r\n        };\r\n        \r\n        fetchMovie();\r\n    }, []);\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        {movie && (\r\n          <div className=\"box\">\r\n            <img className=\"movieImage\" src={movie.posterUrl} alt=\"\" />\r\n            <h1>\r\n              Movie Name : <span className=\"titleSpan\">{movie.title}</span>\r\n            </h1>\r\n            <div className=\"details\">\r\n              <span>Release: {movie.year}</span>\r\n              <span>Seasons :{movie.runtime}</span>\r\n            </div>\r\n            <h3 className=\"plot\">\r\n              PLOT : <span>{movie.plot}</span>{\" \"}\r\n            </h3>\r\n  \r\n            <div className=\"reviewStarts\">\r\n              \r\n            <h1 className=\"reviewTitle\">Reviews for the Movie : </h1>\r\n            <button className=\"addReview\" onClick={() => setShow(true)}>\r\n              Add Review\r\n            </button>\r\n            </div>\r\n  \r\n            <Modal title=\"Add A New Review\" onClose={() => setShow(false)} show={show}>\r\n              {<TvreviewsForm  onClose={() => setShow(false)} />}\r\n            </Modal>\r\n            <div className=\"ALL-Reviews\">\r\n  \r\n            \r\n            {review &&\r\n              review.map((review) => (\r\n                <div className=\"review-details\" key={review._id}>\r\n                  \r\n                  <h4 className=\"userReview\">User : {review.name}</h4>\r\n                  <p>\r\n                    <strong>Review Given: </strong>\r\n                    {review.rating}\r\n                  </p>\r\n                  <p>\r\n                    <strong> {review.reviewGiven} </strong>\r\n                   \r\n                  </p>\r\n                  <p>{review.createdAt}</p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SingleTvshow","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\components\\tvreviewsForm.js",["109"],[],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./reviewsForm.css\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TvreviewsForm = (props) => {\r\n    const [movie, setMovie] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [rating, setRating] = useState(\"\");\r\n    const [reviewGiven, setreviewGiven] = useState(\"\");\r\n    const { id } = useParams();\r\n  \r\n    const [error, setError] = useState(null);\r\n  \r\n  \r\n      useEffect(() => {\r\n          const fetchMovie = async () => {\r\n            const response = await fetch(`/api/tvshows/${id}`);\r\n            const json = await response.json();\r\n            if (response.ok) {\r\n                setMovie(json[\"tvshow\"]);\r\n            }\r\n        };\r\n        fetchMovie();\r\n    }, []);\r\n\r\n \r\n        const handleSubmit = async (e) => {\r\n          e.preventDefault();\r\n          let title= movie.title;\r\n          const review = { name, title, rating, reviewGiven };\r\n      \r\n          const response = await fetch(`/api/tvshows/${id}`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(review),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          const json = await response.json();\r\n      \r\n          if (!response.ok) {\r\n            setError(json.error);\r\n          }\r\n          if (response.ok) {\r\n            setError(null);\r\n            setName('');\r\n            setreviewGiven('');\r\n            setRating('');\r\n            console.log(\" New Review added: \", json);\r\n            props.onClose();\r\n          }\r\n    };\r\n  \r\n    return (\r\n      <form className=\"create\" onSubmit={handleSubmit}>\r\n        <label>Name :</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n          required\r\n        />\r\n  \r\n        <label>Your Rating :</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          onChange={(e) => setRating(e.target.value)}\r\n          value={rating}\r\n          required\r\n        />\r\n  \r\n        <label>Review :</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setreviewGiven(e.target.value)}\r\n          value={reviewGiven}\r\n          required\r\n        />\r\n  \r\n        <button className=\"buttonToAdd\">Add Review</button>\r\n        {error && <div className=\"errorr\">{error}</div>}\r\n      </form>\r\n    );\r\n  };\r\n\r\nexport default TvreviewsForm","C:\\Coding\\Web_Dev\\MERN_STACK\\imdbMovie\\frontend\\src\\pages\\contactus.js",[],[],{"ruleId":"110","severity":1,"message":"111","line":15,"column":14,"nodeType":"112","endLine":15,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":16,"column":13,"nodeType":"112","endLine":16,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":17,"column":13,"nodeType":"112","endLine":17,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":18,"column":13,"nodeType":"112","endLine":18,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":29,"column":6,"nodeType":"115","endLine":29,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":31,"column":9,"nodeType":"119","messageId":"120","endLine":31,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":61,"column":23,"nodeType":"112","endLine":61,"endColumn":52},{"ruleId":"113","severity":1,"message":"123","line":31,"column":6,"nodeType":"115","endLine":31,"endColumn":8,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":18,"column":6,"nodeType":"115","endLine":18,"endColumn":8,"suggestions":"126"},{"ruleId":"113","severity":1,"message":"123","line":25,"column":10,"nodeType":"115","endLine":25,"endColumn":12,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"122","line":52,"column":23,"nodeType":"112","endLine":52,"endColumn":53},{"ruleId":"117","severity":1,"message":"128","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":19},{"ruleId":"113","severity":1,"message":"123","line":33,"column":8,"nodeType":"115","endLine":33,"endColumn":10,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"123","line":26,"column":8,"nodeType":"115","endLine":26,"endColumn":10,"suggestions":"130"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-unused-vars","'handleDelete' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'closeOnEscapeKeyDown'. Either include it or remove the dependency array.",["133"],["134"],"'ReviewsForm' is defined but never used.",["135"],["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"139","fix":"143"},{"desc":"139","fix":"144"},{"desc":"139","fix":"145"},"Update the dependencies array to be: [dispatch]",{"range":"146","text":"147"},"Update the dependencies array to be: [id]",{"range":"148","text":"149"},"Update the dependencies array to be: [closeOnEscapeKeyDown]",{"range":"150","text":"151"},{"range":"152","text":"149"},{"range":"153","text":"149"},{"range":"154","text":"149"},[702,704],"[dispatch]",[870,872],"[id]",[521,523],"[closeOnEscapeKeyDown]",[727,729],[1044,1046],[790,792]]